name: Alembic migrations CI

on: [push, pull_request]

jobs:
  migrations:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt

      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            pg_isready -h 127.0.0.1 -p 5432 -U postgres && break || sleep 1
          done

      - name: Run migrations
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@127.0.0.1:5432/testdb
        run: |
          cd server
          alembic upgrade head

      - name: Check for drift (autogenerate should be no-op)
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@127.0.0.1:5432/testdb
        run: |
          cd server
          set -e
          # generate a temporary revision name; autogenerate will create a file if there is drift
          if alembic revision --autogenerate -m "drift-check-$(date +%s)"; then
            echo "Schema drift detected: autogenerate created a revision." >&2
            exit 2
          fi
